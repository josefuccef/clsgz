<!doctype html>
<html lang="ar">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>مشغل IPTV</title>
        <style>
            body {
                width: 100%;
                font-family: "Tajawal", sans-serif;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
                color: #333;
                overflow-x: hidden;
            }

            .header {
                width: 100%;
                background-color: #ffffff;
                padding: 15px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                display: flex;
                align-items: center;
                justify-content: space-between;
                flex-wrap: wrap;
            }

            .header .title {
                font-size: 1.5rem;
                font-weight: bold;
                color: #e50914;
                margin: 0;
            }

            .search-bar {
                flex: 1;
                margin: 0 15px;
                max-width: 250px;
            }

            .search-bar input {
                width: 80%;
                padding: 8px 15px;
                border: 1px solid #ddd;
                border-radius: 25px;
                outline: none;
            }

            .channels-container {
                padding: 15px;
                display: grid;
                gap: 20px;
                grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
                width: 100%;
                max-width: 1200px;
                margin: 0 auto;
                box-sizing: border-box;
            }

            .channel-card {
                background: #ffffff;
                border: 1px solid #ddd;
                border-radius: 8px;
                padding: 12px;
                text-align: center;
                cursor: pointer;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                transition:
                    transform 0.3s,
                    background-color 0.3s;
                opacity: 0;
                animation: fadeIn 0.5s ease-in forwards;
                width: 100%;
                box-sizing: border-box;
                display: flex;
                flex-direction: column;
                align-items: center;
            }

            .channel-card:hover {
                background-color: #f0f0f0;
                transform: scale(1.05);
            }

            .channel-card img {
                width: 80px;
                height: 80px;
                border-radius: 8px;
                object-fit: cover;
            }

            .channel-card .channel-name {
                font-size: 0.95rem;
                font-weight: bold;
                margin: 10px 0 0 0;
                color: #333;
                width: 100%;
                min-height: 2.4em;
                line-height: 1.2;
                word-wrap: break-word;
            }

            .loading {
                text-align: center;
                margin: 15px 0;
                color: #e50914;
                font-size: 1.1rem;
                animation: pulse 1.5s infinite;
            }

            @keyframes fadeIn {
                from {
                    opacity: 0;
                    transform: translateY(10px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            @keyframes pulse {
                0% {
                    opacity: 1;
                }
                50% {
                    opacity: 0.5;
                }
                100% {
                    opacity: 1;
                }
            }

            @media screen and (max-width: 768px) {
                .channels-container {
                    grid-template-columns: repeat(
                        auto-fill,
                        minmax(120px, 1fr)
                    );
                    gap: 15px;
                    padding: 12px;
                }

                .header {
                    padding: 12px;
                }

                .search-bar {
                    margin: 8px 0;
                    width: 100%;
                }
            }

            @media screen and (max-width: 480px) {
                .channels-container {
                    grid-template-columns: repeat(
                        auto-fill,
                        minmax(100px, 1fr)
                    );
                    gap: 12px;
                    padding: 10px;
                }

                .channel-card img {
                    width: 70px;
                    height: 70px;
                }

                .channel-card .channel-name {
                    font-size: 0.9rem;
                }
            }
        </style>
    </head>
    <body>
        <div class="header">
            <div class="title">مشغل IPTV</div>
            <div class="search-bar">
                <input type="text" id="search" placeholder="ابحث عن قناة..." />
            </div>
        </div>

        <div class="channels-container" id="channels-container">
            <div class="loading" id="loading">جاري تحميل القنوات...</div>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", () => {
                const channelsContainer =
                    document.getElementById("channels-container");
                const searchInput = document.getElementById("search");
                const loading = document.getElementById("loading");
                const canalFile = "canal.txt"; // اسم الملف المحلي

                function loadChannels() {
                    fetch(canalFile)
                        .then(response => response.text())
                        .then(data => {
                            const channels = parseM3U(data);
                            displayChannels(channels);
                        })
                        .catch(error =>
                            console.error("Error loading channels:", error)
                        );
                }

                function parseM3U(data) {
                    const lines = data.split("\n");
                    const channels = [];
                    let currentChannel = {};

                    lines.forEach(line => {
                        line = line.trim();
                        if (line.startsWith("#EXTINF:")) {
                            const match = line.match(/tvg-logo="(.*?)"/);
                            currentChannel.logo = match ? match[1] : "";
                            currentChannel.name =
                                line.split(",")[1] || "قناة غير معروفة";
                        } else if (line && !line.startsWith("#")) {
                            currentChannel.url = line;
                            channels.push(currentChannel);
                            currentChannel = {};
                        }
                    });

                    return channels;
                }

                function displayChannels(channels) {
                    loading.style.display = "none";
                    channelsContainer.innerHTML = "";

                    channels.forEach(channel => {
                        const card = document.createElement("div");
                        card.className = "channel-card";
                        card.innerHTML = `
                            <img src="${channel.logo}" alt="${channel.name}">
                            <div class="channel-name">${channel.name}</div>
                        `;
                        card.addEventListener("click", () =>
                            openInXPolaPlayer(channel.url)
                        );
                        channelsContainer.appendChild(card);
                    });
                }

                function openInXPolaPlayer(url) {
                    const packageName = "com.xpola.player";
                    const intentUrl = `intent:${url}#Intent;package=${packageName};type=video/*;end`;

                    try {
                        window.location.href = intentUrl;
                    } catch {
                        alert("يرجى تثبيت XPola Player لتشغيل هذا الرابط.");
                        window.location.href = `https://play.google.com/store/apps/details?id=${packageName}`;
                    }
                }

                searchInput.addEventListener("input", () => {
                    const searchTerm = searchInput.value.toLowerCase();
                    const cards = document.querySelectorAll(".channel-card");
                    cards.forEach(card => {
                        const name = card
                            .querySelector(".channel-name")
                            .textContent.toLowerCase();
                        card.style.display = name.includes(searchTerm)
                            ? "block"
                            : "none";
                    });
                });

                loadChannels();
            });
        </script>
          <script src="./tcheck.js"></script>
    </body>
</html>
